<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_buscar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAABAdJREFUeF7t
        m8vLTVEYxr/cryUM+ANQRAaKZGKAmJiZ+RPcirnLQAxcBpSZsakyUFIKJSlJiSJRcsk9RcTz1LfrdHr3
        2nufvdf77s95fvWr03f2upy19l5rr3etb0IIIYQQQgghhBBCCCGEEMKRWXAbvABvwqfw26T8zL/xO17D
        a0VHLINs2K/wb015LdMwrRiR2fAY/A6tRq4j0zIP5iUawDv3LrQadRSZl56GmqyFr6DVkG1knsxbJOBd
        mqPxC5m3noQSOE53OeyUyTI0Jxgch1aD5ZBliQE4LLR522kqy9JQNMBFaDVUTlmmAFy1foZWI+WUZWrF
        DHZAq4E8ZNljD0MGVuN4yLLHHgbRrMbxkGWPPU+g1Tgesuyxp0mUs2tZ9tijDghGQ1AwmoSD0WtoMFqI
        BaNQRA9QMC4YhaN7gDZkgtGWZA/gsKBN+WB0LKUH8C7tcjhiXrrzG8JxWkcTewDvXIYMmkRNeS3T6K7v
        EK5adTz9P4adth0WHfwMFh3Mz0UH8xp1cIdoiAuCEzNXxG0neeahSb4hvHP1mhvEOphroce8RQLepTka
        v5B560kogeN0l8NOmSxDc4KBwt0jsAruhofhJXgV3ocv4FtY/OAtMMVyWPdt5zE8BFfDBZPyM//G76w0
        w7IsljmlWAR3waPwGvwErR837Ds4Daaos+X5C+6D02EZ/I7X8Forj0GnxJbnZngCPoDWj6jjFZiCq9aq
        Tf+fkCGMuvBaprHyKuztpj9j8qfgS2hVvKlHYIo6x172w6YwjZXXoL059jID7oG3oFXRNnLYSsGQgZWu
        kON6atgpg2mq5gSWHQoruRcyWmlVsAvXwBQMolnpCg/CUWFaK89Clh3GJvgQWhXr0qUwRdXh36oOTMG0
        Vp6FIYd/Z8Lz8A+0KtW1c2GKqijnQjgqTGvlWciyXeG77x1oVSaXVavOyA74Ad1gDCTnWF8m1w8pIoeg
        19CFefARtCqR2xUwReQkzNHAhXPQqoCHW2GKyNfQszA7K6HXhGvJ0ECKyIUY41jZOQ2twr28DFNEhSI+
        QJdQRJs4ThdyE6SKiGAcb0wXPkKrAp6uhym8w9Ff4BLoglUBb8/AKjw3ZBhK3wBdsCrg7Xs4B6bw2pIs
        5Mjg0glW4REegFXk3pQf1qUTrIIjfAPnwypyHUspM3snWIVGWWcuIHwS/pvhyCowyt9wI6wD54S2RxP5
        tlP3f5yzdYJVWKTPYZNXQD4NTQ/n8iDASbgYslHZuNZ1w2bpBKugaG/ApvEdrlqt4+lcdPEYzG3IIW4n
        5J7HIOGdINQJvUCd0AOadMJ1KDJQpxPuwardPNGCVCeo8Z2wOkGN78xgJ6jxg2AncMJV4wshhBBCCCEq
        mJj4B6qkiZkrBWqiAAAAAElFTkSuQmCC
</value>
  </data>
</root>